349	public static void remove ( final CCriteriumTree tree , final ICriteriumTreeNode node ) { node . getCriterium ( ) . dispose ( ) ; tree . remove ( node ) ; }
607	public double potentialUpside ( final double centile ) { QL . require ( centile >= NUM_ && centile < NUM_ , STR_ ) ; return Math . max ( percentile ( centile ) , NUM_ ) ; }
444	public static String SITInfo ( EnumMap < SIT , EnumMap < CIT , Boolean > > shp ) { StringBuilder result = new StringBuilder ( ) ; for ( SIT key : shp . keySet ( ) ) { result . append ( STR_ + key . toString ( ) + STR_ + CITInfo ( shp . get ( key ) ) + STR_ ) ; } return result . toString ( ) ; }
83	public void addURL ( URL url ) { super . addURL ( url ) ; }
724	public static < T > List < T > asList ( T ... a ) { ArrayList < T > list = new ArrayList < T > ( ) ; for ( T elem : a ) list . add ( elem ) ; return list ; }
402	public static Vector3 pow ( Vector3 o , double power ) { return new Vector3 ( Math . pow ( o . x , power ) , Math . pow ( o . y , power ) , Math . pow ( o . z , power ) ) ; }
880	public void onIceCandidates ( Collection < LocalCandidate > iceCandidates ) { if ( iceCandidates != null ) candidateCounter ++ ; Collection < Attribute > update = IceSdpUtils . createTrickleUpdate ( iceCandidates ) ; for ( Attribute attribute : update ) { logger . info ( attribute . toString ( ) . trim ( ) ) ; } if ( iceCandidates == null ) { try { Thread . sleep ( NUM_ ) ; } catch ( Exception e ) { } logger . info ( STR_ + agent . getTotalHarvestingTime ( ) + STR_ ) ; for ( CandidateHarvester harvester : agent . getHarvesters ( ) ) { logger . info ( harvester . getHarvestStatistics ( ) . toString ( ) . trim ( ) ) ; } } }
578	public static EntityManagerFactory createEntityManagerFactory ( String persistenceUnitName ) { EntityManagerFactory emf = Persistence . createEntityManagerFactory ( persistenceUnitName , getDefaultTestProperties ( ) ) ; Utility . setEntityManagerFactory ( emf ) ; return emf ; }
268	public static Number minus ( Number left , Number right ) { return NumberMath . subtract ( left , right ) ; }
306	public Builder startFromBeginning ( ) { return startFrom ( StreamPosition . START ) ; }
3	public IComment editGlobalCodeNodeComment ( final IComment oldComment , final String commentText ) throws CouldntSaveDataException { if ( m_parentFunction != null ) { return CommentManager . get ( m_provider ) . editGlobalCodeNodeComment ( m_codeNode , oldComment , commentText ) ; } return null ; }
599	public static int forward ( HGSearchResult < ? > rs , int maxSteps ) { int i = NUM_ ; for ( ; i < maxSteps && rs . hasNext ( ) ; i ++ ) rs . next ( ) ; return i ; }
369	protected void remove ( Session session , CloseReason reason ) { Collection < Session > sessions = socketSessions . get ( getChannelId ( session ) ) ; if ( sessions != null && sessions . remove ( session ) ) { fireEvent ( session , reason , SESSION_CLOSED ) ; } }
674	public static Writer leftShift ( OutputStream self , Object value ) throws IOException { OutputStreamWriter writer = new FlushingStreamWriter ( self ) ; leftShift ( writer , value ) ; return writer ; }
247	public static JComboBox leftShift ( JComboBox self , Object i ) { self . addItem ( i ) ; return self ; }
389	public void copyStoredValues ( PrologEnvironment child ) { storedValues . putAll ( child . storedValues ) ; setCleanup ( child . cleanup ) ; }
530	public void dimOnListRowMenuSwiped ( float alpha ) { alpha = Math . max ( alpha , maxAlpha ) ; menuIndicatorView . setAlpha ( alpha ) ; leftIndicatorView . setAlpha ( alpha ) ; rightIndicatorView . setAlpha ( alpha ) ; textView . setAlpha ( alpha ) ; }
788	public void release ( Table metadata ) { }
477	public String parseApiKey ( Element element ) { return element . getText ( ) ; }
756	public static < T > T fromJsonString ( String json , Type typeOfT ) { try { return getGson ( ) . fromJson ( json , typeOfT ) ; } catch ( JsonSyntaxException var3 ) { var3 . printStackTrace ( ) ; return null ; } }
115	public void doSaveWithoutValidating ( IProgressMonitor monitor ) { this . commitPages ( monitor , BOOL_ ) ; model . save ( monitor ) ; this . editorDirtyStateChanged ( ) ; }
650	public void savePosition ( ) { RecordId rid1 = s1 . getRecordId ( ) ; RecordId rid2 = ( s2 == null ) ? null : s2 . getRecordId ( ) ; savedPosition = Arrays . asList ( rid1 , rid2 ) ; }
697	public void println ( String str ) { synchronized ( ToolPrintStream . class ) { String thisMessage = ToolIO . nextMessage + str ; ToolIO . nextMessage = STR_ ; if ( ToolIO . messages . length == ToolIO . length ) { String [ ] newMessages = new String [ NUM_ * ToolIO . messages . length ] ; System . arraycopy ( ToolIO . messages , NUM_ , newMessages , NUM_ , ToolIO . messages . length ) ; ToolIO . messages = newMessages ; } ToolIO . messages [ ToolIO . length ] = thisMessage ; ToolIO . length ++ ; ToolPrintStream . class . notifyAll ( ) ; } }
784	public static BufferedReader newReader ( File file , String charset ) throws FileNotFoundException , UnsupportedEncodingException { return new BufferedReader ( new InputStreamReader ( new FileInputStream ( file ) , charset ) ) ; }
265	public void copyNodeMetaData ( ASTNode other ) { if ( other . metaDataMap == null ) { return ; } if ( metaDataMap == null ) { metaDataMap = new ListHashMap ( ) ; } metaDataMap . putAll ( other . metaDataMap ) ; }
340	public static Value from ( ValueDeclaration decl ) { Type type = decl . getType ( ) ; return new Value ( type , decl . getName ( ) ) ; }
37	public void cancelTargetSelection ( ) throws DebugException { try { m_debugger . cancelTargetSelection ( ) ; m_debugger . setTerminated ( ) ; } catch ( final DebugExceptionWrapper exception ) { throw new DebugException ( exception ) ; } }
312	public void put ( String localPath , String hdfsPath ) throws ReplicatorException { JavaFileIO localFileIO = new JavaFileIO ( ) ; FilePath local = new FilePath ( localPath ) ; FilePath remote = new FilePath ( hdfsPath ) ; try { FileIOUtils . copyBytes ( localFileIO . getInputStream ( local ) , hdfsFileIO . getOutputStream ( remote ) , NUM_ , BOOL_ ) ; } catch ( IOException e ) { throw new ReplicatorException ( STR_ + localPath + STR_ + hdfsPath + STR_ + e . getMessage ( ) , e ) ; } }
751	public static Set < ClassNode > collectAllInterfaces ( ClassNode node ) { HashSet < ClassNode > result = new HashSet < ClassNode > ( ) ; collectAllInterfaces ( node , result ) ; return result ; }
855	public static int compareTo ( Object left , Object right ) { return compareToWithEqualityCheck ( left , right , BOOL_ ) ; }
723	public String namespaceURI ( ) { return this . namespaceURI ; }
896	public Future < Void > removeJob ( long id ) { return this . getJob ( id ) . compose ( null ) ; }
823	public static float fArrayGet ( float [ ] a , int i ) { try { return a [ i ] ; } catch ( Throwable t ) { return a [ DefaultGroovyMethodsSupport . normaliseIndex ( i , a . length ) ] ; } }
241	public static < T > T max ( T [ ] items ) { return max ( ( Iterable < T > ) Arrays . asList ( items ) ) ; }
506	protected void importInstructions ( final int rawModuleId , final int moduleId ) throws SQLException , CouldntLoadDataException { PostgreSQLDataImporter . importInstructions ( getProvider ( ) , rawModuleId , moduleId ) ; }
94	public static Pagination parseQueryParams ( final MultivaluedMap < String , String > queryParams ) throws InvalidValueException { final Map < PaginationKey , Integer > pageData = new HashMap < > ( ) ; queryParams . entrySet ( ) . forEach ( null ) ; return new Pagination ( pageData ) . evaluate ( DEFAULT_PAGE_LIMIT , MAX_PAGE_LIMIT ) ; }
664	public boolean isAllowExternalUserManagment ( ) { return allowExternalUserManagment ; }
206	public DateBuilder inTimeZone ( TimeZone timezone ) { this . tz = timezone ; return this ; }
96	public void nextGroup ( ) throws SAException { if ( _curGroupValue != null ) { if ( _alreadyUsedGroupValues == null ) _alreadyUsedGroupValues = new HashSet < Object > ( ) ; _alreadyUsedGroupValues . add ( _curGroupValue ) ; _curGroupValue = null ; } }
652	private void readObject ( ObjectInputStream in ) throws IOException , ClassNotFoundException { in . defaultReadObject ( ) ; try { initFromName ( getName ( ) ) ; } catch ( RuntimeException e ) { if ( e instanceof NullPointerException || e instanceof IllegalArgumentException ) { InvalidObjectException ee = new InvalidObjectException ( e . getMessage ( ) ) ; ee . initCause ( e ) ; throw ee ; } throw e ; } }
109	public void removeAttributeDelegate ( Closure attrDelegate ) { getProxyBuilder ( ) . attributeDelegates . remove ( attrDelegate ) ; }
42	public EventStoreBuilder withoutUserCredentials ( ) { settingsBuilder . withoutUserCredentials ( ) ; return this ; }
810	public static WorkflowId randomUniqueWorkflowId ( Workflow < ? , ? > workflow ) { Name name = workflow . name ( ) . replaceUnsafeNameChars ( ) ; String randomize = format ( STR_ , ThreadLocalRandom . current ( ) . nextInt ( NUM_ , Integer . MAX_VALUE ) ) ; String nameAsString = trimToMaxLength ( name . value ( ) , MAX_ID_LENGTH - randomize . length ( ) ) ; return WorkflowId . of ( assertValidSwfValue ( nameAsString + randomize ) ) ; }
351	public SafeHtmlBuilder append ( final String in ) { if ( in != null ) { impl . escapeStr ( this , in ) ; } return this ; }
197	public ReplDBMSEvent extract ( ) throws ReplicatorException , InterruptedException { DBMSEvent dbmsEvent = extractor . extract ( ) ; if ( dbmsEvent == null ) return null ; Timestamp extractTimestamp = dbmsEvent . getSourceTstamp ( ) ; ReplDBMSEvent replEvent = new ReplDBMSEvent ( seqno , fragno , dbmsEvent . isLastFrag ( ) , sourceId , epochNumber , extractTimestamp , dbmsEvent ) ; if ( logger . isDebugEnabled ( ) ) logger . debug ( STR_ + dbmsEvent . getSourceTstamp ( ) + STR_ + extractTimestamp ) ; for ( Filter filter : autoFilters ) { try { replEvent = filter . filter ( replEvent ) ; if ( replEvent == null ) return null ; } catch ( ReplicatorException e ) { throw new ExtractorException ( STR_ + e . getMessage ( ) , e ) ; } } if ( dbmsEvent . isLastFrag ( ) ) { seqno ++ ; fragno = NUM_ ; } else fragno ++ ; return replEvent ; }
782	public static Behavior createBehavior ( BeanManager beanManager , String value ) { Behavior delegatingBehavior = null ; Behavior managedBehavior = getBeanReference ( beanManager , Behavior . class , new FacesBehaviorAnnotationLiteral ( value ) ) ; if ( managedBehavior != null ) { delegatingBehavior = new CdiBehavior ( value , managedBehavior ) ; } return delegatingBehavior ; }
630	private void renderTaggedGraphNodesContainerNode ( final CTaggedGraphNodesContainerNode node ) { final List < NaviNode > graphNodes = node . getGraphNodes ( ) ; if ( ! graphNodes . isEmpty ( ) ) { if ( isAllTaggedAndSelected ( graphNodes ) ) { setForeground ( COLOR_TAGGED_SELECTED_ALL ) ; } else if ( isAnyTaggedAndSelected ( graphNodes ) ) { setForeground ( COLOR_TAGGED_SELECTED_ANY ) ; } else if ( isAllTaggedAndInvisible ( graphNodes ) ) { setForeground ( COLOR_TAGGED_INVISIBLE ) ; } setToolTipText ( buildToolTip ( node ) ) ; } }
5	void startTransaction ( Transaction transaction , boolean resume ) { }
518	public static < T > T use ( Class categoryClass , Closure < T > closure ) { return THREAD_INFO . getInfo ( ) . use ( categoryClass , closure ) ; }
546	public DateTime parseTimestamp ( String timestamp ) { DateTimeFormatter parser = ISODateTimeFormat . dateTime ( ) ; return parser . withOffsetParsed ( ) . parseDateTime ( timestamp ) ; }
371	public void chainSwing ( AdvancedModelRenderer [ ] boxes , float speed , float degree , double rootOffset , float swing , float swingAmount ) { float offset = this . calculateChainOffset ( rootOffset , boxes ) ; for ( int index = NUM_ ; index < boxes . length ; index ++ ) { boxes [ index ] . rotateAngleY += this . calculateChainRotation ( speed , degree , swing , swingAmount , offset , index ) ; } }
218	public static String asciis2String ( String ASCIIs ) { String [ ] ASCIIss = ASCIIs . split ( STR_ ) ; StringBuffer sb = new StringBuffer ( ) ; for ( int i = NUM_ ; i < ASCIIss . length ; i ++ ) { sb . append ( ( char ) __ascii2Char ( Integer . parseInt ( ASCIIss [ i ] ) ) ) ; } return sb . toString ( ) ; }
28	public static SourceViewer createFormsSourceViewer ( FormToolkit toolkit , Composite parent , int flags ) { SourceViewer sourceViewer = createSourceViewer ( parent , flags ) ; sourceViewer . setData ( FormToolkit . KEY_DRAW_BORDER , FormToolkit . TREE_BORDER ) ; sourceViewer . getTextWidget ( ) . setData ( FormToolkit . KEY_DRAW_BORDER , FormToolkit . TREE_BORDER ) ; toolkit . adapt ( sourceViewer . getTextWidget ( ) , BOOL_ , BOOL_ ) ; return sourceViewer ; }
794	private static void collectAllAnonymous ( List < IType > list , IParent parent , boolean allowNested ) throws JavaModelException { IJavaElement [ ] children = parent . getChildren ( ) ; for ( int i = NUM_ ; i < children . length ; i ++ ) { IJavaElement childElem = children [ i ] ; if ( isAnonymousType ( childElem ) ) { list . add ( ( IType ) childElem ) ; } if ( childElem instanceof IParent ) { if ( allowNested || ! ( childElem instanceof IType ) ) { collectAllAnonymous ( list , ( IParent ) childElem , allowNested ) ; } } } }
118	public Value multiply ( Value num1 , Value num2 ) { throw new RuntimeException ( STR_ ) ; }
529	public SourceFile findSourceFile ( String packageName , String fileName ) throws IOException { String platformName = getPlatformName ( packageName , fileName ) ; String canonicalName = getCanonicalName ( packageName , fileName ) ; SourceFile sourceFile = cache . get ( canonicalName ) ; if ( sourceFile != null ) { return sourceFile ; } if ( DEBUG ) { System . out . println ( STR_ + fileName + STR_ + packageName + STR_ ) ; } for ( SourceRepository repos : repositoryList ) { if ( repos instanceof BlockingSourceRepository && ! ( ( BlockingSourceRepository ) repos ) . isReady ( ) ) { continue ; } fileName = repos . isPlatformDependent ( ) ? platformName : canonicalName ; if ( DEBUG ) { System . out . println ( STR_ + repos + STR_ + fileName ) ; } if ( repos . contains ( fileName ) ) { sourceFile = new SourceFile ( repos . getDataSource ( fileName ) ) ; cache . put ( canonicalName , sourceFile ) ; return sourceFile ; } } throw new FileNotFoundException ( STR_ + fileName ) ; }
878	private CProjectTreeNode < ? > findProjectContainerNode ( final CProjectTreeNode < ? > databaseNode ) { final List < CProjectTreeNode < ? > > nodes = Lists . newArrayList ( ) ; nodes . add ( databaseNode ) ; while ( ! nodes . isEmpty ( ) ) { final CProjectTreeNode < ? > current = nodes . get ( NUM_ ) ; nodes . remove ( NUM_ ) ; if ( current instanceof CProjectContainerNode ) { return current ; } for ( final Enumeration < ? > e = current . children ( ) ; e . hasMoreElements ( ) ; ) { nodes . add ( ( CProjectTreeNode < ? > ) e . nextElement ( ) ) ; } } throw new IllegalStateException ( STR_ ) ; }
198	public void tearDown ( ) { super . tearDown ( ) ; }
579	protected final void appendBytes ( final byte [ ] data ) { for ( final byte element : data ) { byteData . add ( element ) ; } }
600	public static Address toReilAddress ( final Address address ) { return new Address ( com . google . security . zynamics . reil . ReilHelpers . toReilAddress ( new CAddress ( address . toLong ( ) ) ) . toBigInteger ( ) ) ; }
834	private void createChildren ( ) { if ( m_database . isLoaded ( ) ) { for ( final INaviModule module : m_database . getContent ( ) . getModules ( ) ) { add ( new CModuleNode ( module , m_model , m_actionProvider ) ) ; } } }
767	GSMessageImpl duplicate ( ) throws JMSException { GSSimpleMessageImpl dup = new GSSimpleMessageImpl ( ) ; copyTo ( dup ) ; return dup ; }
597	public void putAllWithPrefix ( TungstenProperties props , String prefix ) { TungstenProperties newProps = new TungstenProperties ( ) ; if ( props . isEmpty ( ) ) { newProps . setObject ( prefix , props ) ; } else { for ( String key : props . keyNames ( ) ) { newProps . setObject ( prefix + key , props . getObject ( key ) ) ; } } putAll ( newProps ) ; }
221	public static HashMap < String , Object > deepMerge ( HashMap < String , Object > def , JsonObject conf ) { return _deepMerge ( def , JSONUtil . jsonToHash ( conf ) ) ; }
587	private static int nameToNum ( String nm , Vector names ) { for ( int i = NUM_ ; i < names . size ( ) ; i ++ ) { if ( names . elementAt ( i ) . equals ( nm ) ) { return i ; } } return - NUM_ ; }
332	public static double round ( double d , int res ) { BigDecimal bd = new BigDecimal ( d ) . setScale ( res , BigDecimal . ROUND_HALF_UP ) ; return bd . doubleValue ( ) ; }
309	public static Number rightShiftUnsigned ( Number self , Number operand ) { return NumberMath . rightShiftUnsigned ( self , operand ) ; }
59	public static void addInPlace ( double [ ] input1 , double [ ] input2 ) throws Exception { if ( input1 . length != input2 . length ) { throw new Exception ( STR_ ) ; } for ( int i = NUM_ ; i < input1 . length ; i ++ ) { input1 [ i ] = input1 [ i ] + input2 [ i ] ; } }
837	public static ByteBuffer convertToSigned16BitSamples ( Buffer buffer ) { return convertToSigned16BitSamples ( buffer . getSamples ( ) ) ; }
178	private boolean trackMatchesString ( Track track , String string ) { boolean matchesName = track . getName ( ) . toLowerCase ( ) . contains ( string . toLowerCase ( ) ) ; boolean matchesArtist = track . getArtist ( ) . toLowerCase ( ) . contains ( string . toLowerCase ( ) ) ; boolean matchesLabel = track . getLabel ( ) . toLowerCase ( ) . contains ( string . toLowerCase ( ) ) ; boolean matchesGenre = track . getGenre ( ) . toLowerCase ( ) . contains ( string . toLowerCase ( ) ) ; boolean matchesAlbum = track . getAlbum ( ) . toLowerCase ( ) . contains ( string . toLowerCase ( ) ) ; return matchesName || matchesArtist || matchesLabel || matchesGenre || matchesAlbum ; }
150	public synchronized void initializeTypeSubstitution ( final INaviOperandTreeNode node , final RawTypeSubstitution rawSubstitution ) { Preconditions . checkNotNull ( node , STR_ ) ; Preconditions . checkNotNull ( rawSubstitution , STR_ ) ; final BaseType baseType = typesContainer . getBaseTypeById ( rawSubstitution . getBaseTypeId ( ) ) ; final TypeSubstitution substitution = new TypeSubstitution ( node , baseType , rawSubstitution . getExpressionId ( ) , rawSubstitution . getPosition ( ) , rawSubstitution . getOffset ( ) , rawSubstitution . getAddress ( ) ) ; node . setTypeSubstitution ( substitution ) ; typesContainer . addTypeSubstitution ( substitution ) ; notifySubstitutionAdded ( substitution ) ; }
737	public static double round ( final double v ) { return ( ( long ) ( v * NUM_ ) ) / NUM_ ; }
67	public boolean next ( ) { if ( currentBlkNum == NUM_ && ! moveTo ( NUM_ ) ) return BOOL_ ; while ( BOOL_ ) { if ( rp . next ( ) ) return BOOL_ ; if ( ! moveTo ( currentBlkNum + NUM_ ) ) return BOOL_ ; } }
121	public StatelessHibernateSpaceSynchronizationEndpointConfigurer sessionFactory ( SessionFactory sessionFactory ) { this . sessionFactory = sessionFactory ; return this ; }
257	private void results ( String status ) { switch ( status ) { case STATUS_OK : Views . gone ( mEmpty ) ; mGrid . animate ( ) . alpha ( NUM_ ) . withLayer ( ) ; break ; case STATUS_ZERO_RESULTS : Views . visible ( mEmpty ) ; break ; } }
538	public static byte [ ] toUTF8 ( Document hostDoc ) throws IOException { return toString ( hostDoc ) . getBytes ( ENC ) ; }
72	private ByteBuffer initBuffer ( GSByteArrayOutputStream bos ) { ByteBuffer byteBuffer = wrap ( bos ) ; _bufferCache . set ( byteBuffer ) ; return byteBuffer ; }
809	public static void eachObject ( File self , Closure closure ) throws IOException , ClassNotFoundException { IOGroovyMethods . eachObject ( newObjectInputStream ( self ) , closure ) ; }
411	public void add ( Map < String , Object > map ) throws SQLException { if ( withinDataSetBatch ) { if ( batchData . isEmpty ( ) ) { batchKeys = map . keySet ( ) ; } else { if ( ! map . keySet ( ) . equals ( batchKeys ) ) { throw new IllegalArgumentException ( STR_ ) ; } } batchData . add ( map ) ; return ; } int answer = executeUpdate ( buildListQuery ( map ) , new ArrayList < Object > ( map . values ( ) ) ) ; if ( answer != NUM_ ) { LOG . warning ( STR_ + answer + STR_ + map ) ; } }
746	public static String convertPropertyName ( String prop ) { if ( Character . isDigit ( prop . charAt ( NUM_ ) ) ) { return prop ; } return java . beans . Introspector . decapitalize ( prop ) ; }
735	private Tag clone ( final ITreeNode < CTag > currentNode , final Tag parentExpression ) { final Tag childExpression = new Tag ( currentNode ) ; m_allTags . put ( currentNode , childExpression ) ; if ( parentExpression != null ) { Tag . link ( parentExpression , childExpression ) ; } for ( final ITreeNode < CTag > child : currentNode . getChildren ( ) ) { clone ( child , childExpression ) ; } return childExpression ; }
189	private boolean notAllowedStart ( String startTag ) { errorState = errorState && startElements . containsKey ( startTag ) && forbiddenIdStartElements . containsKey ( startTag ) ; return errorState ; }
398	public static Vector2 floor ( Vector2 o ) { return new Vector2 ( Math . floor ( o . x ) , Math . floor ( o . z ) ) ; }
279	public void tearDown ( ) { super . tearDown ( ) ; }
17	public CheckedFuture < ? , IOException > indexAsync ( Project . NameKey project , Change . Id id ) { return executor != null ? submit ( new IndexTask ( project , id ) ) : Futures . < Object , IOException > immediateCheckedFuture ( null ) ; }
4	private int stringOffset ( ) { return this . data . readUShort ( Offset . stringOffset . offset ) ; }
795	public static String renderBaseType ( final BaseType baseType ) { return baseType . getName ( ) ; }
790	public static File leftShift ( File file , byte [ ] bytes ) throws IOException { append ( file , bytes ) ; return file ; }
698	public static void saveName ( final Window parent , final INaviAddressSpace addressSpace , final String name ) { try { addressSpace . getConfiguration ( ) . setName ( name ) ; } catch ( final CouldntSaveDataException e ) { CUtilityFunctions . logException ( e ) ; final String innerMessage = STR_ + STR_ ; final String innerDescription = CUtilityFunctions . createDescription ( String . format ( STR_ , addressSpace . getConfiguration ( ) . getName ( ) ) , new String [ ] { STR_ } , new String [ ] { STR_ } ) ; NaviErrorDialog . show ( parent , innerMessage , innerDescription , e ) ; } }
663	public QueryTemplatePacket and ( QueryTemplatePacket template ) { QueryTemplatePacket result = new QueryTemplatePacket ( this ) ; result . intersectRanges ( template ) ; result . intersectUids ( template ) ; result . uniteContainsItems ( template ) ; return result ; }
623	private ParseNode parseNewInstance ( Entry inEntry ) throws ConfigurationException , IOException { int lineno = st . lineno ( ) ; String typeName = token ( STR_ ) ; int t = st . nextToken ( ) ; if ( t == STR_ ) { token ( STR_ ) ; token ( STR_ ) ; return new ArrayConstructor ( typeName , parseArgs ( inEntry , STR_ ) , lineno ) ; } else if ( t != STR_ ) { syntax ( STR_ ) ; } return new ConstructorCall ( typeName , parseArgs ( inEntry , STR_ ) , lineno ) ; }
88	protected void register ( Iterable < String > channelIds ) { for ( String channelId : channelIds ) { register ( channelId ) ; } }
225	boolean goFromRetiredToDead ( ) { return compareAndSet ( Status . RETIRED , Status . DEAD ) ; }
315	protected double [ ] [ ] makeJointVectorForPast ( double [ ] destination ) { try { return MatrixUtils . makeDelayEmbeddingVector ( destination , k , k - NUM_ , destination . length - k ) ; } catch ( Exception e ) { throw new RuntimeException ( e ) ; } }
414	protected Optional < LogData > parseJsonLog ( String s , DateFormat dateFormat ) { try { Validator . validate ( s ) ; final JSONObject jsonObject = new JSONObject ( s ) ; final Map < String , String > map = toMap ( jsonObject ) ; return mapToLogData ( map , dateFormat ) ; } catch ( JSONException e ) { return Optional . empty ( ) ; } }
266	private void convertData ( ) { m_addressSpace . getContent ( ) . addListener ( m_internalContentListener ) ; m_modules = new ArrayList < Module > ( ) ; for ( final INaviModule module : m_addressSpace . getContent ( ) . getModules ( ) ) { addModule ( module ) ; } }
413	public static void rebase ( int id , String commit , String base , AsyncCallback < ChangeInfo > cb ) { RebaseInput rebaseInput = RebaseInput . create ( ) ; rebaseInput . setBase ( base ) ; call ( id , commit , STR_ ) . post ( rebaseInput , cb ) ; }
135	public static XMethod createXMethod ( PreorderVisitor visitor ) { JavaClass javaClass = visitor . getThisClass ( ) ; Method method = visitor . getMethod ( ) ; XMethod m = createXMethod ( javaClass , method ) ; return m ; }
706	public void tearDown ( ) { super . tearDown ( ) ; }
222	public static Vector2 round ( Vector2 o ) { return new Vector2 ( Math . round ( o . x ) , Math . round ( o . z ) ) ; }
483	private static int convertValueToInt ( CharSequence charSeq , int defaultValue ) { if ( null == charSeq ) return defaultValue ; String nm = charSeq . toString ( ) ; int value ; int sign = NUM_ ; int index = NUM_ ; int len = nm . length ( ) ; int base = NUM_ ; if ( STR_ == nm . charAt ( NUM_ ) ) { sign = - NUM_ ; index ++ ; } if ( STR_ == nm . charAt ( index ) ) { if ( index == ( len - NUM_ ) ) return NUM_ ; char c = nm . charAt ( index + NUM_ ) ; if ( STR_ == c || STR_ == c ) { index += NUM_ ; base = NUM_ ; } else { index ++ ; base = NUM_ ; } } else if ( STR_ == nm . charAt ( index ) ) { index ++ ; base = NUM_ ; } return Integer . parseInt ( nm . substring ( index ) , base ) * sign ; }
181	public float maximumAbsolute ( ) { if ( Math . abs ( mLeft ) > Math . abs ( mRight ) ) { return Math . abs ( mLeft ) ; } else { return Math . abs ( mRight ) ; } }
590	private void playPrevious ( ) { if ( mediaType == Config . YOUTUBE_MEDIA_TYPE_VIDEO ) { restartVideo ( ) ; return ; } if ( nextWasCalled ) { iterator . previous ( ) ; nextWasCalled = BOOL_ ; } if ( ! iterator . hasPrevious ( ) ) { iterator = youTubeVideos . listIterator ( youTubeVideos . size ( ) ) ; } videoItem = iterator . previous ( ) ; previousWasCalled = BOOL_ ; playVideo ( ) ; }
287	public static Vector3 ceil ( Vector3 o ) { return new Vector3 ( Math . ceil ( o . x ) , Math . ceil ( o . y ) , Math . ceil ( o . z ) ) ; }
490	private void writeObject ( ObjectOutputStream out ) throws IOException { out . defaultWriteObject ( ) ; registrarID . writeBytes ( out ) ; }
807	public PortService addPort ( int port ) { if ( port > NUM_ && port < NUM_ ) this . portList . add ( port ) ; return this ; }
303	public static double [ ] [ ] covarianceMatrix ( double [ ] [ ] data ) { return covarianceMatrix ( data , means ( data ) ) ; }
372	public static File writeDataToTempFile ( final String data , final String ext ) { try { final File file = createTempFile ( ext ) ; final PrintWriter out = new PrintWriter ( new FileOutputStream ( file ) ) ; out . print ( data ) ; out . close ( ) ; return file ; } catch ( IOException e ) { JKExceptionUtil . handle ( e ) ; return null ; } }
145	public static boolean chooseMathMethod ( Selector info , MetaMethod metaMethod ) { Map < MethodType , MethodHandle > xmap = methods . get ( info . name ) ; if ( xmap == null ) return BOOL_ ; MethodType type = replaceWithMoreSpecificType ( info . args , info . targetType ) ; type = widenOperators ( type ) ; MethodHandle handle = xmap . get ( type ) ; if ( handle == null ) return BOOL_ ; info . handle = handle ; return BOOL_ ; }
170	private static Map < INaviViewNode , INaviViewNode > createNodes ( final INaviView target , final Collection < INaviViewNode > nodes ) { final HashMap < INaviViewNode , INaviViewNode > map = new HashMap < INaviViewNode , INaviViewNode > ( ) ; for ( final INaviViewNode blockNode : nodes ) { createNodes ( target , blockNode , map ) ; } return map ; }
897	public JobService failedCount ( String type , Handler < AsyncResult < Long > > handler ) { delegate . failedCount ( type , handler ) ; return this ; }
313	private static String concatHeirTokens ( SyntaxTreeNode stn ) { SyntaxTreeNode [ ] heirs = stn . getHeirs ( ) ; if ( heirs . length == NUM_ ) { if ( stn . getKind ( ) < SyntaxTreeConstants . NULL_ID ) { return stn . getImage ( ) ; } else { return STR_ ; } } String val = STR_ ; for ( int i = NUM_ ; i < heirs . length ; i ++ ) { val = val + concatHeirTokens ( heirs [ i ] ) ; } return val ; }
638	private void write ( int integer , int width ) throws JSONException { try { this . bitwriter . write ( integer , width ) ; if ( probe ) { log ( integer , width ) ; } } catch ( Throwable e ) { throw new JSONException ( e ) ; } }
98	public static void initializeEdgeType ( final INaviEdge edge , final ZyEdgeRealizer < NaviEdge > realizer ) { switch ( edge . getType ( ) ) { case JUMP_CONDITIONAL_FALSE : realizer . setLineType ( LineType . LINE_2 ) ; return ; case JUMP_CONDITIONAL_FALSE_LOOP : realizer . setLineType ( LineType . DASHED_DOTTED_2 ) ; return ; case JUMP_CONDITIONAL_TRUE : realizer . setLineType ( LineType . LINE_2 ) ; return ; case JUMP_CONDITIONAL_TRUE_LOOP : realizer . setLineType ( LineType . DASHED_DOTTED_2 ) ; return ; case JUMP_UNCONDITIONAL_LOOP : realizer . setLineType ( LineType . DASHED_DOTTED_2 ) ; return ; case ENTER_INLINED_FUNCTION : realizer . setLineType ( LineType . DASHED_2 ) ; return ; case LEAVE_INLINED_FUNCTION : realizer . setLineType ( LineType . DASHED_2 ) ; return ; case TEXTNODE_EDGE : realizer . setArrow ( Arrow . WHITE_DIAMOND ) ; return ; default : realizer . setLineType ( LineType . LINE_2 ) ; return ; } }
841	public void addDocumentType ( DocumentType documentType ) { mDocumentTypes . add ( documentType ) ; }
656	public String consumeRequiredRawAttribute ( String name ) throws UnableToCompleteException { String value = consumeRawAttribute ( name ) ; if ( value == null ) { failRequired ( name ) ; } return value ; }
114	public static int [ ] findBitErrors ( BitSet msg ) { int [ ] retVal = null ; int checksum = getTransmittedChecksum ( msg ) ; checksum ^= NUM_ ; for ( int i = msg . nextSetBit ( NUM_ ) ; i >= NUM_ && i < NUM_ ; i = msg . nextSetBit ( i + NUM_ ) ) { checksum ^= sCHECKSUMS [ i ] ; } if ( checksum == NUM_ ) { msg . flip ( NUM_ ) ; } else { for ( int x = NUM_ ; x < NUM_ ; x ++ ) { if ( checksum == sCHECKSUMS [ x ] ) { retVal = new int [ NUM_ ] ; retVal [ NUM_ ] = x ; } } } return retVal ; }
824	static FormatterStep createLazy ( String name , Throwing . Supplier < Throwing . Function < String , String > > formatterSupplier ) { Supplier < Throwing . Function < String , String > > rethrowFormatterSupplier = Errors . rethrow ( ) . wrap ( formatterSupplier ) ; Supplier < Throwing . Function < String , String > > memoized = Suppliers . memoize ( rethrowFormatterSupplier ) ; return new FileIndependent ( name , null ) ; }
194	private void pickOnlyProvider ( ) throws ServletException { try { Entry < OAuthLoginProvider > loginProvider = Iterables . getOnlyElement ( loginProviders ) ; defaultAuthPlugin = loginProvider . getPluginName ( ) ; defaultAuthProvider = loginProvider . getExportName ( ) ; } catch ( NoSuchElementException e ) { throw new ServletException ( STR_ ) ; } catch ( IllegalArgumentException e ) { } }
644	public Node parse ( InputSource input ) throws IOException , SAXException { getXMLReader ( ) . parse ( input ) ; return parent ; }
43	public void push ( ) { state . cliprgn = g . getClipBounds ( ) ; stack . push ( state ) ; state = ( GraphicsState ) state . clone ( ) ; }
133	public void accept ( IQueryExecutor executor , ISpaceProxy space , Transaction txn , int readModifier , int max ) throws SQLException { executor . execute ( this , space , txn , readModifier , max ) ; }
263	private double [ ] resample ( ) { int length = mSpecification . getFilterLength ( ) ; if ( length % NUM_ == NUM_ ) { length -- ; } double half = ( double ) length / NUM_ ; double [ ] resampled = new double [ ( int ) Math . ceil ( half ) ] ; for ( int x = NUM_ ; x < resampled . length ; x ++ ) { resampled [ x ] = getFrequencyResponse ( Math . cos ( Math . PI * ( double ) x / half ) ) ; } return resampled ; }
541	public ChangeSet decrement ( String path , short delta ) { return increment ( path , - delta ) ; }
694	public void deleteLocalCodeNodeComment ( final IComment comment ) throws CouldntDeleteException { CommentManager . get ( m_provider ) . deleteLocalCodeNodeComment ( m_codeNode , comment ) ; }
244	public static Object find ( Object self , Closure closure ) { BooleanClosureWrapper bcw = new BooleanClosureWrapper ( closure ) ; for ( Iterator iter = InvokerHelper . asIterator ( self ) ; iter . hasNext ( ) ; ) { Object value = iter . next ( ) ; if ( bcw . call ( value ) ) { return value ; } } return null ; }
740	static String findAttributeInRules ( String subpath , boolean isFolder , String key , List < AttributesRule > rules ) { String value = null ; for ( AttributesRule rule : rules ) { if ( rule . isMatch ( subpath , isFolder ) ) { for ( Attribute attribute : rule . getAttributes ( ) ) { if ( attribute . getKey ( ) . equals ( key ) ) { value = attribute . getValue ( ) ; } } } } return value ; }
2	public void unregister ( ) { getPreferenceStore ( ) . removePropertyChangeListener ( this ) ; }
779	public Vector2 abs ( ) { x = Math . abs ( x ) ; z = Math . abs ( z ) ; return this ; }
196	public void initialise ( int k , double epsilon ) throws Exception { initialise ( k , tau , epsilon ) ; }
282	public PatternElement label ( String label ) { this . label = label ; return this ; }
821	private double [ ] [ ] cloneValues ( ) { double [ ] [ ] newDoubles = new double [ values . length ] [ ] ; for ( int i = NUM_ ; i < values . length ; i ++ ) newDoubles [ i ] = values [ i ] . clone ( ) ; return newDoubles ; }
568	public GPathResult parse ( final InputSource input ) throws IOException , SAXException { reader . setContentHandler ( this ) ; reader . parse ( input ) ; return getDocument ( ) ; }
684	public static Number previous ( Number self ) { return NumberNumberMinus . minus ( self , ONE ) ; }
228	public void replaceSplitElement ( int aIndex , Fragment aSplitElement ) { splits . set ( aIndex , aSplitElement ) ; }
510	private void disposedLoadedObjects ( ) { if ( m_modules != null ) { for ( final Module module : m_modules ) { module . dispose ( ) ; } for ( final Project project : m_projects ) { project . dispose ( ) ; } if ( m_debuggerTemplateManager != null ) { m_debuggerTemplateManager . dispose ( ) ; } m_viewTagManager = null ; m_nodeTagManager = null ; m_modules . clear ( ) ; m_projects . clear ( ) ; m_debuggerTemplateManager = null ; } }
419	public DataSet sort ( Closure sort ) { return new DataSet ( this , null , sort ) ; }
101	private void flush ( ) { myPage . write ( currentBlk ) ; lastFlushedLsn = lastLsn ; }
729	private void updateGUI ( ) { final boolean textChanged = ! m_nameTextField . getText ( ) . equals ( m_tagTreeNode . getObject ( ) . getName ( ) ) ; final boolean descriptionChanged = ! m_descriptionField . getText ( ) . equals ( m_tagTreeNode . getObject ( ) . getDescription ( ) ) ; m_saveButton . setEnabled ( textChanged || descriptionChanged ) ; m_nameTextField . setModified ( textChanged ) ; m_descriptionField . setModified ( descriptionChanged ) ; }
603	private static Entry [ ] unmarshalAttributes ( ObjectInputStream in ) throws IOException , ClassNotFoundException { ArrayList attributes = new ArrayList ( ) ; MarshalledInstance mi = null ; while ( ( mi = ( MarshalledInstance ) in . readObject ( ) ) != null ) { try { attributes . add ( ( Entry ) mi . get ( BOOL_ ) ) ; } catch ( Throwable e ) { if ( e instanceof Error && ThrowableConstants . retryable ( e ) == ThrowableConstants . BAD_OBJECT ) { throw ( Error ) e ; } logger . log ( Level . WARNING , STR_ , e ) ; } } Entry [ ] attrs = new Entry [ attributes . size ( ) ] ; return ( Entry [ ] ) attributes . toArray ( attrs ) ; }
621	public CMapId cmapId ( int index ) { return CMapId . getInstance ( platformId ( index ) , encodingId ( index ) ) ; }
438	public static View createView ( final Module module , final List < ReilInstruction > instructions ) { Preconditions . checkNotNull ( module , STR_ ) ; Preconditions . checkNotNull ( instructions , STR_ ) ; final INaviView view = CReilViewCreator . create ( module . getNative ( ) , convert ( instructions ) ) ; return ObjectFinders . getObject ( view , module . getViews ( ) ) ; }
564	public IElementType capturePodBlock ( ) { CharSequence buffer = getBuffer ( ) ; int tokenStart = getTokenEnd ( ) ; setTokenStart ( tokenStart ) ; int bufferEnd = getBufferEnd ( ) ; int currentPosition = tokenStart ; int linePos = currentPosition ; int linesNumber = NUM_ ; while ( BOOL_ ) { while ( linePos < bufferEnd && buffer . charAt ( linePos ) != STR_ ) { linePos ++ ; } if ( linePos < bufferEnd && buffer . charAt ( linePos ) == STR_ ) { linePos ++ ; } CharSequence line = buffer . subSequence ( currentPosition , linePos ) ; currentPosition = linePos ; if ( linePos == bufferEnd || StringUtil . startsWith ( line , STR_ ) && linesNumber > NUM_ ) { if ( linePos < bufferEnd ) { linePos -- ; } setTokenEnd ( linePos ) ; break ; } linesNumber ++ ; } return POD ; }
328	public static AS_PathEntity translateAStarPathtoPathEntity ( ArrayList < AStarNode > input ) { AS_PathPoint [ ] points = new AS_PathPoint [ input . size ( ) ] ; AStarNode reading ; int i = NUM_ ; int size = input . size ( ) ; while ( size > NUM_ ) { reading = input . get ( size - NUM_ ) ; points [ i ] = new AS_PathPoint ( reading . x , reading . y , reading . z ) ; points [ i ] . setIndex ( i ) ; points [ i ] . setTotalPathDistance ( i ) ; points [ i ] . setDistanceToNext ( NUM_ ) ; points [ i ] . setDistanceToTarget ( size ) ; if ( i > NUM_ ) { points [ i ] . setPrevious ( points [ i - NUM_ ] ) ; } input . remove ( size - NUM_ ) ; size -- ; i ++ ; } return new AS_PathEntity ( points ) ; }
856	protected List < Expression > transformExpressions ( List < ? extends Expression > expressions , ExpressionTransformer transformer ) { List < Expression > list = new ArrayList < Expression > ( expressions . size ( ) ) ; for ( Expression expr : expressions ) { list . add ( transformer . transform ( expr ) ) ; } return list ; }
254	public ContainerTag with ( Iterable < ? extends DomContent > children ) { if ( children != null ) { for ( DomContent child : children ) { this . with ( child ) ; } } return this ; }
742	public ChangeModifiers remove ( ChangeModifiers modifiers ) { return createIfNeeded ( super . remove ( modifiers ) ) ; }
793	private void convertData ( ) { final DirectedGraph < IBlockNode , IBlockEdge > graph = m_function . getGraph ( ) ; final List < BasicBlock > blocks = new ArrayList < BasicBlock > ( ) ; final List < BlockEdge > edges = new ArrayList < BlockEdge > ( ) ; final HashMap < IBlockNode , BasicBlock > blockMap = new HashMap < IBlockNode , BasicBlock > ( ) ; for ( final IBlockNode block : graph . getNodes ( ) ) { final BasicBlock newBlock = new BasicBlock ( block , this ) ; blockMap . put ( block , newBlock ) ; blocks . add ( newBlock ) ; } for ( final IBlockEdge edge : graph . getEdges ( ) ) { final BasicBlock source = blockMap . get ( edge . getSource ( ) ) ; final BasicBlock target = blockMap . get ( edge . getTarget ( ) ) ; edges . add ( new BlockEdge ( edge , source , target ) ) ; } m_graph = new FlowGraph ( blocks , edges ) ; }
423	public Histogram newMaxDiffFreqHistogram ( int numBkts , int numPcts ) { Map < String , BucketBuilder > initBbs = new HashMap < String , BucketBuilder > ( ) ; for ( String fld : schema . fields ( ) ) initBbs . put ( fld , new MaxDiffFreqBucketBuilder ( frequencies ( fld ) , numPcts ) ) ; return newMaxDiffHistogram ( numBkts , initBbs ) ; }
375	public static String serialize ( Writable writable ) { return serialize ( asString ( writable ) ) ; }
235	public int compareTo ( final DatabaseVersion version ) { final String [ ] naviSplit = this . version . split ( STR_ ) ; final String [ ] dbSplit = version . getString ( ) . split ( STR_ ) ; final int mainVersionNavi = Integer . parseInt ( naviSplit [ NUM_ ] ) ; final int mainVersionDB = Integer . parseInt ( dbSplit [ NUM_ ] ) ; if ( mainVersionNavi != mainVersionDB ) { return mainVersionNavi - mainVersionDB ; } final int subVersionNavi = Integer . parseInt ( naviSplit [ NUM_ ] ) ; final int subVersionDB = Integer . parseInt ( dbSplit [ NUM_ ] ) ; if ( subVersionNavi != subVersionDB ) { return subVersionNavi - subVersionDB ; } final int buildVersionNavi = Integer . parseInt ( naviSplit [ NUM_ ] ) ; final int buildVersionDB = Integer . parseInt ( dbSplit [ NUM_ ] ) ; return buildVersionNavi - buildVersionDB ; }
66	public static Collection < AnnotationValue > resolveTypeQualifiers ( AnnotationValue value ) { LinkedList < AnnotationValue > result = new LinkedList < AnnotationValue > ( ) ; resolveTypeQualifierNicknames ( value , result , new LinkedList < ClassDescriptor > ( ) ) ; return result ; }
468	public static int [ ] parseStringArrayOfInts ( String stringOfInts ) { int [ ] returnValues ; if ( stringOfInts . indexOf ( STR_ ) >= NUM_ ) { String [ ] indices = stringOfInts . split ( STR_ ) ; int startIndex = Integer . parseInt ( indices [ NUM_ ] ) ; int endIndex = Integer . parseInt ( indices [ NUM_ ] ) ; returnValues = new int [ endIndex - startIndex + NUM_ ] ; for ( int i = NUM_ ; i < returnValues . length ; i ++ ) { returnValues [ i ] = startIndex + i ; } } else { String [ ] repeatStrings = stringOfInts . split ( STR_ ) ; returnValues = new int [ repeatStrings . length ] ; for ( int i = NUM_ ; i < returnValues . length ; i ++ ) { returnValues [ i ] = Integer . parseInt ( repeatStrings [ i ] ) ; } } return returnValues ; }
390	public void writeData ( DataOutput dout ) throws IOException { dout . write ( getMessage ( ) ) ; }
648	public String toJson ( ) { return gson . toJson ( this ) ; }
231	public void remove ( IObjectInfo < T > oi ) { lock . lock ( ) ; try { remove_impl ( ( ObjectInfo < T > ) oi ) ; } finally { lock . unlock ( ) ; } }
853	public TaskProgress clone ( ) { TaskProgress clone = new TaskProgress ( this ) ; return clone ; }
417	protected String columnToTypeString ( Column c , String tableType ) { switch ( c . getType ( ) ) { case Types . TINYINT : return STR_ ; case Types . SMALLINT : return STR_ ; case Types . INTEGER : return STR_ ; case Types . BIGINT : return STR_ ; case Types . BOOLEAN : return STR_ ; case Types . CHAR : { if ( c . getLength ( ) == NUM_ ) return STR_ ; else return STR_ + c . getLength ( ) + STR_ ; } case Types . VARCHAR : return STR_ + c . getLength ( ) + STR_ ; case Types . DATE : return STR_ ; case Types . TIMESTAMP : return STR_ ; case Types . CLOB : return STR_ ; default : return STR_ ; } }
276	private static MethodHandle selectNumberTransformer ( Class param , Object arg ) { param = TypeHelper . getWrapperClass ( param ) ; if ( param == Byte . class ) { return TO_BYTE ; } else if ( param == Character . class || param == Integer . class ) { return TO_INT ; } else if ( param == Long . class ) { return TO_LONG ; } else if ( param == Float . class ) { return TO_FLOAT ; } else if ( param == Double . class ) { return TO_DOUBLE ; } else if ( param == BigInteger . class ) { return TO_BIG_INT ; } else if ( param == BigDecimal . class ) { return TO_BIG_DEC ; } else if ( param == Short . class ) { return TO_SHORT ; } else { return null ; } }
93	public void colorize ( final int level , final long offset , final int size , final Color color , final Color bgcolor ) { Preconditions . checkArgument ( offset >= NUM_ , STR_ ) ; Preconditions . checkArgument ( size >= NUM_ , STR_ ) ; Preconditions . checkArgument ( ( level >= NUM_ ) && ( level < m_coloredRanges . length ) , STR_ ) ; m_coloredRanges [ level ] . addRange ( new ColoredRange ( offset , size , color , bgcolor ) ) ; repaint ( ) ; }
317	public static InstructionGraph create ( final ReilGraph graph ) { return CInstructionGraphConverter . convert ( com . google . security . zynamics . reil . algorithms . mono . InstructionGraph . create ( ReilGraphConverter . convert ( graph ) ) ) ; }
610	private void fetchMovies ( List < Movie > movies , String director ) { movies . stream ( ) . filter ( null ) . map ( null ) . distinct ( ) . forEach ( null ) ; }
252	public NodeTextRep clone ( ) { NodeTextRep result = new NodeTextRep ( ) ; result . nodeText = new String [ this . nodeText . length ] ; for ( int i = NUM_ ; i < result . nodeText . length ; i ++ ) { result . nodeText [ i ] = this . nodeText [ i ] ; } result . mapping = this . mapping . clone ( ) ; for ( int i = NUM_ ; i < result . mapping . length ; i ++ ) { result . mapping [ i ] = new Vector < MappingPair > ( ) ; for ( int j = NUM_ ; j < this . mapping [ i ] . size ( ) ; j ++ ) { result . mapping [ i ] . add ( this . mapping [ i ] . elementAt ( j ) ) ; } } return result ; }
502	private void insertEntry ( Entry e , long now ) { e . calcRenew ( now ) ; leases . put ( e , e ) ; }
366	public void clearSpectrum ( ) { mDisplayFFTBins = null ; repaint ( ) ; }
435	public short [ ] encodePOV ( ) { short [ ] vals = new short [ povs . length ] ; for ( int i = NUM_ ; i < vals . length ; i ++ ) vals [ i ] = ( short ) povs [ i ] ; return vals ; }
567	public static void offerSuperUser ( Activity activity ) { getInternals ( ) . offerSuperUser ( activity ) ; }
359	public static Object extractInnerConnectionFromBoneCP ( Object pooledConnection ) throws IOException { return extractInnerConnectionFromPooledConnection ( pooledConnection , BONECP_INNER_CONNECTION_VARNAME ) ; }
476	private void calculateBackgroundColor ( final INaviViewNode node ) { final List < SearchResult > results = m_searcher . getResults ( ) ; for ( final SearchResult result : results ) { if ( ( result . getObject ( ) instanceof NaviNode ) && ( ( NaviNode ) result . getObject ( ) ) . getRawNode ( ) . equals ( node ) ) { setBackground ( SEARCH_HIT_BACKGROUND ) ; return ; } } }
691	public Address toFilebase ( final Module module , final Address address ) { Preconditions . checkNotNull ( module , STR_ ) ; Preconditions . checkNotNull ( address , STR_ ) ; return new Address ( m_debugger . memoryToFile ( module . getNative ( ) , new RelocatedAddress ( new CAddress ( address . toLong ( ) ) ) ) . getAddress ( ) . toBigInteger ( ) ) ; }
373	public static String timeStamp2Date ( long timestamp ) { return timeStamp2Date ( timestamp , STR_ , BOOL_ ) ; }
354	public int readInt ( ) throws IOException { return bfdi . readInt ( ) ; }
158	public Matrix subtract ( Matrix mx ) { double [ ] [ ] newMatrix = new double [ rows ] [ columns ] ; for ( int i = NUM_ ; i < rows ; i ++ ) for ( int j = NUM_ ; j < columns ; j ++ ) newMatrix [ i ] [ j ] = values [ i ] [ j ] - mx . get ( i , j ) ; return new Matrix ( newMatrix ) ; }
260	public void addQualifier ( TransitionFlags flag ) { value |= flag . getValue ( ) ; }
298	public Iterator < Plugin > pluginIterator ( ) { return pluginByIdMap . values ( ) . iterator ( ) ; }
547	public void addDebugger ( final DebuggerTemplate debugger ) throws CouldntSaveDataException { Preconditions . checkNotNull ( debugger , STR_ ) ; Preconditions . checkArgument ( debugger . inSameDatabase ( m_provider ) , STR_ ) ; m_provider . addDebugger ( m_project , debugger ) ; m_assignedDebuggers . add ( debugger ) ; for ( final IProjectListener listener : m_listeners ) { try { listener . addedDebugger ( m_project , debugger ) ; } catch ( final Exception exception ) { CUtilityFunctions . logException ( exception ) ; } } updateModificationDate ( ) ; }
757	public Future < Job > inactive ( ) { return this . state ( JobState . INACTIVE ) ; }
829	public static < T > LinkedBindingBuilder < T > bind ( Binder binder , TypeLiteral < T > type ) { binder . disableCircularProxies ( ) ; return binder . bind ( type ) . annotatedWith ( UniqueAnnotations . create ( ) ) ; }
543	private ISpacePredicate createSpacePredicate ( Object expectedValue ) { switch ( _templateMatchCode ) { case TemplateMatchCodes . EQ : return new EqualsSpacePredicate ( expectedValue ) ; case TemplateMatchCodes . NE : return new NotEqualsSpacePredicate ( expectedValue ) ; case TemplateMatchCodes . LT : return new LessSpacePredicate ( castToComparable ( expectedValue ) ) ; case TemplateMatchCodes . LE : return new LessEqualsSpacePredicate ( castToComparable ( expectedValue ) ) ; case TemplateMatchCodes . GT : return new GreaterSpacePredicate ( castToComparable ( expectedValue ) ) ; case TemplateMatchCodes . GE : return new GreaterEqualsSpacePredicate ( castToComparable ( expectedValue ) ) ; case TemplateMatchCodes . REGEX : return new RegexSpacePredicate ( ( ( String ) expectedValue ) . replaceAll ( STR_ , STR_ ) . replaceAll ( STR_ , STR_ ) ) ; case TemplateMatchCodes . NOT_REGEX : return new NotRegexSpacePredicate ( ( ( String ) expectedValue ) . replaceAll ( STR_ , STR_ ) . replaceAll ( STR_ , STR_ ) ) ; case TemplateMatchCodes . IN : return new InSpacePredicate ( ( Set ) expectedValue ) ; default : throw new IllegalArgumentException ( STR_ ) ; } }
678	public Predicate pred ( ) { return pred ; }
443	private void openWifiSettings ( ) { Intent intent = new Intent ( Settings . ACTION_WIFI_SETTINGS ) ; final PackageManager packageManager = getActivity ( ) . getPackageManager ( ) ; if ( packageManager . resolveActivity ( intent , PackageManager . MATCH_DEFAULT_ONLY ) != null ) { startActivity ( intent ) ; return ; } intent = new Intent ( Settings . ACTION_WIRELESS_SETTINGS ) ; if ( packageManager . resolveActivity ( intent , PackageManager . MATCH_DEFAULT_ONLY ) != null ) { startActivity ( intent ) ; } }
431	private void sort ( Data < Resource > data , List < String > sortFields ) { List < Comparator < Resource > > comparisonFunctions = buildComparisonFunctions ( sortFields ) ; data . sort ( null ) ; }
16	public Compiler add ( URL url ) { config . classpath . add ( url ) ; return this ; }
513	public static Calendar toCalendar ( Date self ) { Calendar cal = Calendar . getInstance ( ) ; cal . setTime ( self ) ; return cal ; }
657	private void handleQueryResultList ( JsonValue resultList , QueryResourceHandler handler ) { for ( JsonValue entry : resultList ) { String id = null ; String rev = null ; if ( entry . isMap ( ) ) { id = entry . get ( ResourceResponse . FIELD_ID ) . asString ( ) ; rev = entry . get ( ResourceResponse . FIELD_REVISION ) . asString ( ) ; } handler . handleResource ( newResourceResponse ( id , rev , entry ) ) ; } }
708	public IObjectInfo < T > addUnlocked ( T subject ) { return store_impl ( subject ) ; }
202	protected void updateRemoteClock ( ) { if ( remoteClockThread != null ) { synchronized ( remoteClockLock ) { remoteClockLock . notifyAll ( ) ; } } }
803	public static double [ ] sums ( double [ ] [ ] input ) { double [ ] theSums = new double [ input [ NUM_ ] . length ] ; for ( int r = NUM_ ; r < input . length ; r ++ ) { for ( int c = NUM_ ; c < input [ r ] . length ; c ++ ) { theSums [ c ] += input [ r ] [ c ] ; } } return theSums ; }
92	public void stop ( ) { if ( output ) { System . setOut ( ( PrintStream ) out ) ; } else { System . setErr ( ( PrintStream ) out ) ; } }
48	public static Servo servo ( int pwmPort ) { return pwmRegistrar . fetch ( pwmPort , Servo . class , null ) ; }
195	private Record parseResponse ( String response ) throws StageException { Record record = null ; try ( DataParser parser = parserFactory . getParser ( STR_ , response ) ) { record = parser . parse ( ) ; if ( conf . dataFormat == DataFormat . TEXT ) { record . set ( record . get ( STR_ ) ) ; } } catch ( IOException | DataParserException e ) { errorRecordHandler . onError ( Errors . HTTP_00 , e . toString ( ) , e ) ; } return record ; }
626	public static TypesTreeModel createEmptyTypeModel ( ) { return new TypesTreeModel ( ) ; }
846	public static Vec2D fromRadians ( double angleInRad , double magnitude ) { double x = magnitude * Math . cos ( angleInRad ) ; double y = magnitude * Math . sin ( angleInRad ) ; return new Vec2D ( x , y ) ; }
629	public void delete ( ) throws JMSException { }
183	public void filterThrough ( PduFilter filter ) throws IOException { Pdu pdu ; try { pdu = source . read ( ) ; } catch ( EOFException eof ) { if ( propagateEof ) { try { sink . close ( ) ; } catch ( IOException e ) { } } throw eof ; } Pdu filteredPdu = filter . filter ( pdu ) ; if ( filteredPdu != null ) { sink . write ( filteredPdu ) ; } ; }
168	public static Map < String , byte [ ] > process ( Map < String , ClassNode > nodes , Map < String , MappedClass > mappings , boolean useMaxs ) { Map < String , byte [ ] > out = new HashMap < String , byte [ ] > ( ) ; SkidRemapper mapper = new SkidRemapper ( mappings ) ; try { for ( ClassNode cn : nodes . values ( ) ) { ClassWriter cw = new MappingClassWriter ( mappings , useMaxs ? ClassWriter . COMPUTE_MAXS : ClassWriter . COMPUTE_FRAMES ) ; ClassVisitor remapper = new ClassRemapper ( cw , mapper ) ; cn . accept ( remapper ) ; out . put ( mappings . containsKey ( cn . name ) ? mappings . get ( cn . name ) . getNewName ( ) : cn . name , cw . toByteArray ( ) ) ; } } catch ( Exception e ) { e . printStackTrace ( ) ; } return out ; }
775	private Locale toLocale ( String str ) { if ( str == null ) return null ; String [ ] split = str . split ( STR_ ) ; if ( split . length == NUM_ ) return new Locale ( STR_ ) ; else if ( split . length == NUM_ ) return new Locale ( split [ NUM_ ] ) ; else if ( split . length == NUM_ ) return new Locale ( split [ NUM_ ] , split [ NUM_ ] ) ; else return new Locale ( split [ NUM_ ] , split [ NUM_ ] , split [ NUM_ ] ) ; }
9	PageRecord removePageRecord ( Integer pageNumber ) { SoftReference ref = pages . remove ( pageNumber ) ; if ( ref != null ) { return ( PageRecord ) ref . get ( ) ; } return null ; }
591	public Class parseClass ( File file ) throws CompilationFailedException , IOException { return parseClass ( new GroovyCodeSource ( file , config . getSourceEncoding ( ) ) ) ; }
733	public boolean isSubscribedToAll ( ) { return isNullOrEmpty ( streamId ) ; }
